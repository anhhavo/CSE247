Your TA's name:

Students in your studio group:

    Name        WUSTLKey (e.g. "jbuhler")
	
1. Anh Vo		    ahvo
2.Grant Marcketta   gmarcketta
3.
4.
5.
6.

Below each question, type in your short, to-the-point answers.

Question A1:
T(n) = Theta(n^2)   - Case 3
Question A2:
T(n) = Theta(n^2 log n) -  Case 2
Question A3:
Case 3 :  T(n) = Theta(2^n)
Question A4:
Case 1:  T(n) = Theta(n^2)
Question A5:
Case 2:  T(n) = Theta(n log^2 n)
Question A6:
Case 2 : T(n) = Theta(n log^3 n)
Question A7:
Case 1 : T(n) = Theta(n)
Question A8:
Case 3: T(n) = THeta(n!)
Question A9:
Case 2: T(n) = Theta(n log^2 n)
Question A10:
Case 2: T(n) = Theta(n log^2 n)
Question A11:
Case 1: T(n) = Theta (n)
Question A12:
Case 3: T(n) = Theta(n log n)
Question A13:
Case 3: T(n) = Theta(n log n)
Question A14:
Does not apply
Question A15:
Case 3: T(n) = Theta(n log n)
Question B1:
It only binary searched twice. It needs a loop.
Question B2:
Since the array is sorted, and each time the loop executed, we know for sure that 
x can only lie either upper or lower half. Hence if x does exist in the array, it is obvious
x must lie in one of the halfs, hence the invariant holds.
Question B3:
x = 0, then H = -1
Question B4:
because you want to increase L not decrease H, the invaraint fails when L > H
Question B5:
A[L..H+1]
Question B6:
Yes. 
Question B7:
Since the condition for while loop is L < H, and L is increased so the invariant holds
Question C1:
IT does not. 
Question C2:
It is the last element. 
Question C3:
Since L is always increasing so the selected element must be the last in the series of repeated
Question C4:
CHange the if line to if (A[H] = x) return H.
